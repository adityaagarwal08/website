// 🌐 Deployment & CI/CD Configuration
// 1. Initialize Next.js project and copy Dashboard into pages/index.js
// 2. Add Tailwind per instructions above

// vercel.json (no comments allowed in JSON)
// Save as "vercel.json"
{
  "version": 2,
  "builds": [
    { "src": "package.json", "use": "@vercel/next" }
  ],
  "routes": [
    { "src": "/(.*)", "dest": "/$1" }
  ]
}

# .github/workflows/deploy.yml
# Save as .github/workflows/deploy.yml
name: CI/CD
on:
  push:
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          alias-domains: your-dashboard.vercel.app

// pages/index.js
import React, { useState } from 'react';

// Sample data placeholder
const sampleData = [
  {
    id: 1,
    title: "Global Markets Rally on Tech Earnings",
    summary: "Tech giants beat Q1 estimates, pushing indices higher.",
    tags: ["Markets", "Tech"],
    analyst: "Analyst 1",
    time: "2025-05-25T07:00:00Z"
  },
  {
    id: 2,
    title: "Oil Prices Dip Amid Demand Concerns",
    summary: "OPEC signals potential production increase, weighing on prices.",
    tags: ["Commodities", "Energy"],
    analyst: "Analyst 2",
    time: "2025-05-25T07:15:00Z"
  }
];

export default function Dashboard() {
  const [showAnalyst1, setShowAnalyst1] = useState(true);
  const [showAnalyst2, setShowAnalyst2] = useState(true);
  const [query, setQuery] = useState('');

  // Filtered and consolidated feed
  const filtered = sampleData.filter(item => {
    if (item.analyst === 'Analyst 1' && !showAnalyst1) return false;
    if (item.analyst === 'Analyst 2' && !showAnalyst2) return false;
    return item.title.toLowerCase().includes(query.toLowerCase()) || item.summary.toLowerCase().includes(query.toLowerCase());
  });

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <header className="mb-6">
        <h1 className="text-3xl font-bold">Daily Research Summary</h1>
        <p className="text-gray-600">Consolidated view of today's key updates</p>
      </header>

      <div className="flex items-center gap-4 mb-4">
        <input
          type="text"
          placeholder="Search..."
          value={query}
          onChange={e => setQuery(e.target.value)}
          className="border rounded p-2 flex-grow"
        />
        <label className="flex items-center gap-1">
          <input type="checkbox" checked={showAnalyst1} onChange={() => setShowAnalyst1(!showAnalyst1)} />
          Analyst 1
        </label>
        <label className="flex items-center gap-1">
          <input type="checkbox" checked={showAnalyst2} onChange={() => setShowAnalyst2(!showAnalyst2)} />
          Analyst 2
        </label>
      </div>

      <section className="space-y-4">
        {filtered.map(item => (
          <article key={item.id} className="bg-white p-4 rounded shadow">
            <div className="flex justify-between items-center">
              <h2 className="text-xl font-semibold">{item.title}</h2>
              <span className="text-sm text-gray-500">
                {new Date(item.time).toLocaleTimeString('en-IN', { hour: '2-digit', minute: '2-digit' })}
              </span>
            </div>
            <p className="mt-2 text-gray-700">{item.summary}</p>
            <div className="mt-3 flex flex-wrap gap-2">
              {item.tags.map(tag => (
                <span key={tag} className="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
                  {tag}
                </span>
              ))}
            </div>
            <div className="mt-2 text-sm text-gray-500 italic">{item.analyst}</div>
          </article>
        ))}
      </section>
    </div>
  );
}

